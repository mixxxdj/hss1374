name: Build

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: macOS 10.15
            os: macos-10.15
            install_dir: ~/hss1394
          - name: Windows 2019 (MSVC)
            os: windows-2019
            install_dir: D:\hss1394
            cc: cl
            cxx: cl

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}
    steps:
    - name: "Check out repository"
      uses: actions/checkout@v2

    - name: "Set up cmake"
      uses: jwlawson/actions-setup-cmake@v1.4
      with:
        # This should always match the mininum required version in
        # our CMakeLists.txt
        cmake-version: '3.4.x'

    - name: "[Windows] Set up MSVC Developer Command Prompt"
      if: runner.os == 'Windows'
      uses: seanmiddleditch/gha-setup-vsdevenv@v3

    - name: "Create build directory"
      run: mkdir build

    - name: "Configure"
      run: cmake -DCMAKE_INSTALL_PREFIX=${{ matrix.install_dir }} ..
      working-directory: build
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}

    - name: "[macOS] Set up gcc/clang problem matcher"
      if: runner.os != 'Windows'
      uses: ammaraskar/gcc-problem-matcher@master

    - name: "[Windows] Set up MSVC problem matcher"
      if: runner.os == 'Windows'
      uses: ammaraskar/msvc-problem-matcher@master

    - name: "Build"
      run: cmake --build .
      working-directory: build
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}

    - name: "Install"
      run: cmake --build build --target install

    - name: Build example application
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build .
      working-directory: examples
      env:
        CMAKE_PREFIX_PATH: ${{ matrix.install_dir }}

    - name: "Upload artifact"
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}
        path: ${{ matrix.install_dir }}
